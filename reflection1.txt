How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

You could restore previous versions of the file

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

When committing manually, you can save versions of the file when you fix a bug, or typos(a logical change is made),you can do it as often as you see fit.
Whereas when you have them automatically saved, it might not be relevant to your work.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Saving multiple files is more convinient for the user of the files, whereas treating them separately saves up space

How can you use the commands git log and git diff to view the history of files?
git log shows all the commits and git diff with the arguments com1 and com2 shows the differences between com1 and com2.

How might using version control make you more confident to make changes that could break something?

You have the assurance that you can restore your previous files.

Now that you have your workspace set up, what do you want to try using Git for?
Buiding repositories of my work.